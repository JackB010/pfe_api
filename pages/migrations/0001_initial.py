# Generated by Django 4.1 on 2023-03-19 19:05

import accounts.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "name",
                    models.CharField(max_length=40, primary_key=True, serialize=False),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PageSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "theme",
                    models.CharField(
                        choices=[("dark", "Dark"), ("light", "Light")],
                        default="light",
                        max_length=5,
                    ),
                ),
                ("show_owners", models.BooleanField(default=True)),
                ("show_photo_logout", models.BooleanField(default=True)),
                ("hide_content", models.BooleanField(default=True)),
                ("followers_limit", models.BooleanField(default=False)),
                ("followers_limit_num", models.IntegerField(default=-1)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="page_settings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Page",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("bio", models.TextField(blank=True, null=True)),
                (
                    "photo",
                    models.ImageField(
                        blank=True,
                        default="default/default_photo.jpg",
                        null=True,
                        upload_to=accounts.models.img_profile,
                        verbose_name="picture",
                    ),
                ),
                (
                    "photo_icon",
                    models.ImageField(
                        blank=True,
                        default="default/default_icon.png",
                        null=True,
                        upload_to=accounts.models.img_profile,
                        verbose_name="profil picture icon",
                    ),
                ),
                ("first_ip", models.GenericIPAddressField(editable=False, null=True)),
                ("ip", models.GenericIPAddressField(editable=False, null=True)),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "last_updated",
                    models.DateTimeField(auto_now=True, verbose_name="updated"),
                ),
                ("last_seen", models.DateTimeField(blank=True, null=True)),
                ("about", models.CharField(max_length=50)),
                (
                    "categories",
                    models.ManyToManyField(
                        blank=True, related_name="page_categories", to="pages.category"
                    ),
                ),
                (
                    "owners",
                    models.ManyToManyField(
                        blank=True,
                        related_name="owners_page",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="page",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
